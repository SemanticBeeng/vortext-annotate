* Background
Vortext is a system that allows you to upload PDF documents, and annotate them with various extractions.
In essence it's a very simple web-based document management system.

It relies on [[https://github.com/vortext/spa][Sp√°]] for its client-side functionality.

Vortext is under heavy development; the idea is to ultimately pair the management of extractions from documents with customizable machine learning predictors.
This way we hope to ease the burden of extracting data from literature, as is often the case in the biomedical sciences and law.
At this point, however, Vortext does not do any predictions.
See the [[https://github.com/vortext/vortext-demo][Vortext Demo]] repository for a system that does.
If you are interested in helping us with these ideas, drop us a line at [[http://vortext.systems][vortext.systems]].

* Technical overview
** Server side
The server side is written in [[http://clojure.org/][Clojure]] and uses PostgreSQL as the database.
If you are new to Clojure the code might look unfamiliar.
But, Clojure is a wonderful language, and if you are interested in learning more we recommend the following resources:
- [[https://yogthos.github.io/ClojureDistilled.html][Clojure Distilled]]
- [[http://www.braveclojure.com/][Clojure for the brave and true]]
- [[https://aphyr.com/tags/Clojure-from-the-ground-up][Clojure from the ground up]]

We use [[http://www.luminusweb.net/][Luminus]] as a basis for many parts, so we recommended reading their documentation as well.

* Development prerequisites
** Mac OS X
To develop the server we require [[%20http://leiningen.org/][leiningen]] which can be installed with [[http://brew.sh/][Homebrew]].
We require at least Java JVM/JDK 1.8 and Leiningen 2.4.

   #+BEGIN_SRC
 brew update # make sure you have recent versions
 brew install leiningen # install via Homebrew
   #+END_SRC

   #+BEGIN_SRC
 git clone <this repo>
 cd <your folder>
 lein deps # retrieve project dependencies
 git submodule update --init --recursive

 # Compile the PDF.js files
 cd resources/public/scripts/spa/pdfjs
 brew install node # install nodejs via Homebrew
 npm install
 node make generic
   #+END_SRC

To prevent some bugs and ensure future compatibility we convert the PDF documents to [[https://en.wikipedia.org/wiki/PDF/A][PDF/A-2]] (PDF archive) before storing them. To do this we use GhostScript. If you have not yet installed [[http://www.ghostscript.com/][GhostScript]] run =brew install ghostscript=.

** Database
We're using PostgreSQL as the database.
The database settings can be configured with the environment variables specified by [[https://github.com/weavejester/environ][environ]] in project.clj.
The default database is =spa= with user/pass =spa/develop=.
You'll obviously need to change this in production.

   #+BEGIN_SRC
 CREATE DATABASE spa;
 CREATE USER spa WITH PASSWORD 'develop';
 GRANT ALL PRIVILEGES ON DATABASE spa TO spa;
   #+END_SRC

To populate the database tables run =lein migrate=.
If you're running OS X and are looking for a easy way to run PostgreSQL, we recommend [[http://postgresapp.com/][Postgres.app]].

** Run
The run the server use
 #+BEGIN_SRC
 lein trampoline run start # will run the server
 DEV=true lein trampoline run start # will run in development mode
 #+END_SRC

* Future work
  See [[https://github.com/joelkuiper/spa/issues?labels=idea&state=open][ideas]] or the other issues.

* Contributing
  Currently this is a research object.
  The API and organizational structure are subject to change.
  Comments and suggestions are much appreciated.
  For code contributions: fork, branch, and send a pull request.

* License
  Spa is open source, and licensed under [[http://gplv3.fsf.org/][GPLv3]]. See [[https://github.com/joelkuiper/spa/blob/master/LICENSE.md][LICENSE.md]] for more information.
