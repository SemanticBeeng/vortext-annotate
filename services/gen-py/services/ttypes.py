#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:utf8strings,dynamic
#

from thrift.Thrift import TType, TMessageType, TException, TApplicationException
import structs.ttypes


from thrift.protocol.TBase import TBase, TExceptionBase



class ProcessException(TExceptionBase):
  """
  Attributes:
   - timestamp
   - what
   - why
  """

  thrift_spec = (
    None, # 0
    (1, TType.I32, 'timestamp', None, None, ), # 1
    (2, TType.STRING, 'what', None, None, ), # 2
    (3, TType.STRING, 'why', None, None, ), # 3
  )

  def __init__(self, timestamp=None, what=None, why=None,):
    self.timestamp = timestamp
    self.what = what
    self.why = why

  def __str__(self):
    return repr(self)

  def __repr__(self):
    L = ['%s=%r' % (key, value)
      for key, value in self.__dict__.iteritems()]
    return '%s(%s)' % (self.__class__.__name__, ', '.join(L))

  def __eq__(self, other):
    return isinstance(other, self.__class__) and self.__dict__ == other.__dict__

  def __ne__(self, other):
    return not (self == other)
